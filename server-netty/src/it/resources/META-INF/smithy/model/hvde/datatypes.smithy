$version: "2.0"

namespace com.amazon.hyperloop.streaming
use smithy.protocols#idx

@pattern("^[a-zA-Z0-9\\-]{1,100}$")
@length(min: 1, max: 100)
@documentation("RequestId generated by the client for every event published to the cloud")
string RequestId

@length(min: 1, max: 1128)
string ResourceIdentifierString

@pattern("^[a-zA-Z0-9\\-]{1,100}$")
@length(min: 1, max: 100)
string AttributeId

@documentation("Attribute value generated by EdgeEvent")
@sensitive
union AttributeValue {
    @idx(1)
    stringValue: StringAttributeValue

    @idx(2)
    longValue: Long,

    @idx(3)
    doubleValue: Double

    @idx(4)
    booleanValue: Boolean

    @idx(5)
    stringList: StringList

    @idx(6)
    longList: LongList

    @idx(7)
    doubleList: DoubleList

    @idx(8)
    booleanList: BooleanList

    @idx(9)
    complexAttributeValue: ComplexAttributeValue,

    @idx(10)
    integerValue: Integer,

    @idx(11)
    floatValue: Float,

    @idx(12)
    integerList: IntegerList,

    @idx(13)
    floatList: FloatList
}

@length(min: 0, max: 1000)
string ComplexAttributeValue

@length(min: 0, max: 1000)
string StringAttributeValue

@documentation("Attribute value list with boolean member(s)")
@length(min: 0, max: 10)
list BooleanList {
    member: Boolean
}

@documentation("Attribute value list with string member(s)")
@length(min: 0, max: 10)
list StringList {
    member: StringAttributeValue
}

@documentation("Attribute value list with long member(s)")
@length(min: 0, max: 10)
list LongList {
    member: Long
}

@documentation("Attribute value list with double member(s)")
@length(min: 0, max: 10)
list DoubleList {
    member: Double
}

@documentation("Attribute value list with integer member(s)")
@length(min: 0, max: 10)
list IntegerList {
    member: Integer
}

@documentation("Attribute value list with float member(s)")
@length(min: 0, max: 10)
list FloatList {
    member: Float
}


@range(min: 1, max: 3600000) // Maximum = 1 hour
@documentation("Debounce interval for attribute update in milliseconds")
long DebounceIntervalMs

@pattern("^[a-zA-Z0-9\\-]{1,100}$")
@length(min: 1, max: 100)
@suppress(["AWSReservedWords"])
string ObjectId

@pattern("^[a-zA-Z0-9\\-]{1,100}$")
@length(min: 1, max: 100)
string ResourceName

@pattern("^[a-zA-Z0-9\\-]{1,100}$")
@length(min: 1, max: 100)
string EdgeSubscriptionId

@pattern("^[a-zA-Z0-9\\-]{1,100}$")
@length(min: 1, max: 100)
string DataSyncEngineId

// keep this in sync with https://code.amazon.com/packages/AwsVltrnHlControlPlaneModel/blobs/mainline/--/model/attributes/datatypes.smithy#L12
@length(min: 1, max: 100)
@pattern("^[a-zA-Z0-9][a-zA-Z0-9._-]*$")
string AttributeName

@documentation("Status for EdgeSubscription")
enum EdgeSubscriptionStatus {
    EDGE_UPDATE_PENDING
    ACTIVE
    REJECTED
}

@documentation("Status for ReportEdgeSubscriptionStatus")
enum ReportedEdgeSubscriptionStatus {
    ACCEPTED
    REJECTED
}

@pattern("^[0-9]{1,10}$")
@length(min: 1, max: 10)
@documentation("EdgeSubscription resource revision")
string EdgeSubscriptionRevision

list PollEdgeSubscriptionSummaryList {
    member: PollEdgeSubscriptionSummary
}

structure PollEdgeSubscriptionSummary {
    @required
    @idx(1)
    edgeSubscriptionId: EdgeSubscriptionId

    @required
    @idx(2)
    revision: EdgeSubscriptionRevision
}

list GetEdgeSubscriptionSummaryList {
    member: GetEdgeSubscriptionSummary
}

structure GetEdgeSubscriptionSummary {
    @required
    @idx(1)
    edgeSubscriptionId: EdgeSubscriptionId

    @required
    @idx(2)
    revision: EdgeSubscriptionRevision
}

list EdgeSubscriptionChangesList {
    member: EdgeSubscriptionChange
}

structure EdgeSubscriptionChange {
    @required
    @idx(1)
    edgeSubscriptionId: EdgeSubscriptionId

    @required
    @idx(2)
    revision: EdgeSubscriptionRevision

    @required
    @idx(3)
    change: EdgeSubscriptionChangeType

    @idx(4)
    attributes: EdgeSubscriptionAttributes

    @documentation("Userdata of EdgeSubscription resource")
    @idx(5)
    userdata: Userdata
}

list EdgeSubscriptionAttributes {
    member: EdgeSubscriptionAttribute
}

structure EdgeSubscriptionAttribute {
    // TODO: attributeId will be removed by UMBER-1211
    @documentation("[DEPRECATED] 'attributeId' will be removed in favor of `attributeName`!")
    @idx(1)
    attributeId: String

    @required
    @idx(2)
    maxRateInMs: Long

    @range(min: 1, max: 10)
    @documentation("This is only applicable to floating point/double values")
    @idx(3)
    precision: Integer

    @documentation("Consistency group of the Attribute")
    @idx(4)
    consistencyGroup: ResourceName

    // TODO: @required will be added as part of UMBER-1211
    // @required
    @documentation("Attribute name the associated Attribute")
    @idx(5)
    attributeName: AttributeName // AttributeName has to be the same as defined in ControlPlaneModel
}

structure EdgeSubscriptionAttribute {
    // TODO: attributeId will be removed by UMBER-1211
    @documentation("[DEPRECATED] 'attributeId' will be removed in favor of `attributeName`!")
    @idx(1)
    attributeId: String

    @required
    @idx(2)
    maxRateInMs: Long

    @range(min: 1, max: 10)
    @documentation("This is only applicable to floating point/double values")
    @idx(3)
    precision: Integer

    @documentation("Consistency group of the Attribute")
    @idx(4)
    consistencyGroup: ResourceName

    // TODO: @required will be added as part of UMBER-1211
    // @required
    @documentation("Attribute name the associated Attribute")
    @idx(5)
    attributeName: AttributeName // AttributeName has to be the same as defined in ControlPlaneModel
}

enum EdgeSubscriptionChangeType {
    CREATE,
    UPDATE,
    REMOVE
}

@documentation("AttributeValueUpdate describes an attribute value change event")
structure AttributeValueUpdate {
    @idx(1)
    value: AttributeValue

    @required
    @idx(2)
    edgeSubscriptionId: EdgeSubscriptionId // future change to array

    @idx(3)
    timestamp: Timestamp

    @idx(4)
    metadata: AttributeMetadataSet
}

@documentation("AttributeValueUpdates contains multiple AttributeValueUpdate")
@length(min: 1, max: 50)
map AttributeValueUpdates {
    @documentation("The attributeName as key for the value updates")
    key: AttributeName,
    value: AttributeValueUpdate
}

@documentation("Reason for processing an edge event to fail")
enum NAckReason {
    MESSAGE_TOO_BIG
    UNKNOWN
}

@sensitive
@documentation("Userdata of EdgeSubscription Resource")
union Userdata {
    @documentation("Userdata as string")
    @idx(1)
    string: String
}

// AttributeValue Metadata
@documentation("Metadata value provided for attribute")
@sensitive
union AttributeMetadataValue {
    @length(min: 0, max: 64)
    @idx(1)
    strValue: String,

    @idx(2)
    strArrayValue: StringMetadataList
}

@documentation("Metadata list with string member(s)")
@length(min:0, max: 20)
@sparse
@sensitive
list StringMetadataList {
    @length(min: 0, max: 64)
    member: String
}

@documentation("Metadata map describing attribute value")
@length(min:0, max: 20)
@sparse
map AttributeMetadataSet {
    @length(min: 1, max: 128)
    key: String,
    value: AttributeMetadataValue
}

list PolledAttributeSet {
    member: PolledAttributeUpdate
}

structure PolledAttributeUpdate {
    @required
    @documentation("Identifies the attribute resource as defined on the Catalog")
    @idx(1)
    attributeName: ResourceName

    @documentation("Value of the attribute update")
    @idx(2)
    value: AttributeValue

    @required
    @idx(3)
    updateType: AttributeUpdateType

    @documentation("Timestamp of the attribute update value")
    @idx(4)
    timestamp: Timestamp
}

@length(min: 1, max: 256)
blob SynchronizationToken

enum AttributeUpdateType {
    @documentation("Used to indicate an attribute has been created or updated")
    UPSERT = "UPSERT"

    @documentation("Used to indicate an attribute has been deleted")
    DELETE = "DELETE"
}
